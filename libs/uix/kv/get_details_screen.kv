#: import gch kivy.utils.get_color_from_hex
#: import F kivy.factory.Factory
#: import images_path kivymd.images_path
#: import colors kivymd.color_definitions.colors
#: import SweetAlert kivymd_extensions.sweetalert.SweetAlert
#: import TextFieldRound libs.uix.custom_uix.textfield.TextFieldRound
#: import CustomImage libs.uix.baseclass.templates_screen.CustomImage

<GetDetailsScreen>:
	MDBoxLayout:
		orientation: "vertical"

		MDToolbar:
			title: "Please Enter Your App Details"
			anchor_title: "center"
			md_bg_color: self.theme_cls.bg_normal
			left_action_items: [["arrow-left", lambda x: root.change_to_templates()]]

		MDBoxLayout:

			CustomImage:
				name: root.selected_template
				use_toggle_behavior: False
				hover_behavior: False
				size_hint_x: None
				width: dp(200)
				pos_hint: {"center_x": .5, "center_y": .5}

			MDBoxLayout:
				orientation: "vertical"
				adaptive_height: True
				spacing: dp(10)
				padding: dp(20)
				pos_hint: {"center_x": .5, "center_y": .5}

				CustomLabel:
					text: "Basic"
					font_style: "H6"
					halign: "left"
				MDSeparator:
				CustomTextField:
					id: project_title
					icon_left: "rename-box"
					hint_text: "Project Title"
					on_info_press: SweetAlert().fire("Project Title", "Title of Your Project.")
				CustomTextField:
					id: project_name
					icon_left: "script-text"
					hint_text: "Project Name"
					on_info_press: SweetAlert().fire("Project Name", "Name of Your Project, Must Not Contain Space.")
				CustomTextField:
					id: version
					icon_left: "alpha-v"
					hint_text: "Application Version"
					on_info_press: SweetAlert().fire("Application Version", "Version of Your Project.")
				CustomTextField:
					id: path_to_project
					icon_left: "folder"
					hint_text: "Path to Project"
					on_focus: root.open_file_manager(self)
					on_info_press: SweetAlert().fire("Path to Project", "Path to Create Your Project.")
				CustomTextField:
					id: author_name
					icon_left: "face"
					hint_text: "Author Name"
					on_info_press: SweetAlert().fire("Author Name", "Name of the Author of the Project.")

				MDBoxLayout:
					orientation: "vertical"
					adaptive_height: True
					CustomLabel:
						text: "Theming"
						font_style: "H6"
						halign: "left"
					MDSeparator:

				MDBoxLayout:
					adaptive_height: True
					padding: (dp(100), 0, dp(100), 0)

					PrimaryTheming:
						id: primary
					Widget:
					AccentTheming:
						id: accent
					Widget:
					ThemeStyleTheming:
						id: theme_style

				MDBoxLayout:
					adaptive_height: True
					Widget:
					MDRaisedButton:
						text: "Create Project"
						on_release:
							root.create_project(project_title.text, project_name.text, version.text, path_to_project.text, author_name.text)

<CustomTextField@TextFieldRound>:
	icon_right: "information-variant"


<PrimaryTheming@MDBoxLayout>:
	orientation: "vertical"
	adaptive_size: True
	spacing: dp(5)

	CustomLabel:
		text: "Primary"
		font_style: "Button"
		halign: "center"

	MDSeparator:

	MDBoxLayout:
		adaptive_size: True

		MDBoxLayout:
			adaptive_size: True
			orientation: "vertical"

			MDDropDownItem:
				id: primary_palette
				text: "Blue"
				current_item: "Blue"
				on_release: root.parent.parent.parent.parent.parent.primary_palette_menu.open()

			MDDropDownItem:
				id: primary_hue
				text: "500"
				current_item: "500"
				on_release: root.parent.parent.parent.parent.parent.primary_hue_menu.open()

		ColorWidget:
			rgba_color: colors[primary_palette.current_item][primary_hue.current_item] if primary_palette.current_item else "FFFFFF"

<AccentTheming@MDBoxLayout>:
	orientation: "vertical"
	adaptive_size: True
	spacing: dp(5)

	CustomLabel:
		text: "Accent"
		font_style: "Button"
		halign: "center"

	MDSeparator:

	MDBoxLayout:
		adaptive_size: True

		MDBoxLayout:
			adaptive_size: True
			orientation: "vertical"

			MDDropDownItem:
				id: accent_palette
				text: "Amber"
				current_item: "Amber"
				on_release: root.parent.parent.parent.parent.parent.accent_palette_menu.open()

			MDDropDownItem:
				id: accent_hue
				text: "500"
				current_item: "500"
				on_release: root.parent.parent.parent.parent.parent.accent_hue_menu.open()

		ColorWidget:
			rgba_color: colors[accent_palette.current_item][accent_hue.current_item] if accent_palette.current_item else "FFFFFF"

<ThemeStyleTheming@MDBoxLayout>:
	orientation: "vertical"
	adaptive_size: True
	spacing: dp(5)

	CustomLabel:
		text: "Theme Style"
		font_style: "Button"
		halign: "center"

	MDSeparator:

	MDBoxLayout:
		adaptive_size: True

		MDBoxLayout:
			orientation: "vertical"
			adaptive_size: True

			MDDropDownItem:
				id: theme_style
				text: "Light"
				current_item: "Light"
				on_release: root.parent.parent.parent.parent.parent.theme_style_menu.open()

			MDDropDownItem: # dummy
				opacity: 0

		ColorWidget:
			rgba_color: "FAFAFA" if theme_style.current_item == "Light" else "121212"

<LoadingPopup>:
    size_hint: (.9, .15)
    pos_hint: {'center_x': .5, 'center_y': .5}
    background: f"{images_path}/transparent.png"
    on_pre_open: spinner.active == True
    on_dismiss: spinner.active == False
    auto_dismiss: False

    canvas:
        Color:
            rgb: app.theme_cls.bg_normal
        RoundedRectangle:
            radius: [20,]
            size: self.size
            pos: self.pos

    MDBoxLayout:
    	adaptive_height: True
    	spacing: dp(40)
    	padding: dp(40)
    	pos_hint: {"center_y": .5}

	    MDSpinner:
	        id: spinner
	        size_hint: None, None
	        size: dp(46), dp(46)

        MDBoxLayout:
        	orientation: "vertical"
        	spacing: dp(10)

		    CustomLabel:
		        text: "Loading"
		        font_style: "H6"
		        halign: "left"
		        valign: "middle"

		    CustomLabel:
		        id: label
		        theme_text_color: "Secondary"
		        font_style: "Body1"
		        halign: "left"
		        valign: "middle"

		Widget:


<ColorWidget>:
    size_hint_x: None

    canvas:
    	Color:
    		rgba: self.rgba_color
    	RoundedRectangle:
    		size: self.size
    		pos: self.pos
    		radius: [10,]